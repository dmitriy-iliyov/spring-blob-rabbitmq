version: "3.8"
services:
#   spring-mongodb-blob
    mongo-api:
      container_name: mongo-api
      build:
        context: ./spring-mongodb-blob
        dockerfile: Dockerfile
      environment:
        - API_PORT=5000
        - JWT_SECRET=kdojfiwouewfkjop
        - JWT_LIFETIME=60000

        - MONGO_HOSTNAME=mongodb
        - MONGO_PORT=27017
        - MONGO_USERNAME=rootuser
        - MONGO_PASSWORD=rootpass
        - MONGO_DB=mydb
        - MONGODB_HOST=mongodb

        - BLOB_URI="BlobEndpoint=https://dataincloudlab3.blob.core.windows.net/;QueueEndpoint=https://dataincloudlab3.queue.core.windows.net/;FileEndpoint=https://dataincloudlab3.file.core.windows.net/;TableEndpoint=https://dataincloudlab3.table.core.windows.net/;SharedAccessSignature=sv=2022-11-02&ss=bfqt&srt=o&sp=rwdlacupiytfx&se=2024-06-19T23:56:16Z&st=2024-06-16T15:56:16Z&spr=https&sig=N4yTkhAzNKNZGvZ3YekQDAk7EyqXOC7WZocKyobdTyk%3D"
        - BLOB_CONTAINER_NAME=blobcontainer

        - RABBITMQ_HOST=message_broker
        - RABBITMQ_PORT=5672
        - RABBITMQ_USER=guest
        - RABBITMQ_PASS=guest
      ports:
        - 5000:8080
    mongodb:
      image: mongo
      container_name: mongodb-container
      ports:
        - 27017:27017
      volumes:
        - /Users/Sayner/github_repos/spring-mongodb-rest-api/api/data:/data
      environment:
        - MONGO_INITDB_ROOT_USERNAME=rootuser
        - MONGO_INITDB_ROOT_PASSWORD=rootpass
    mongo-express:
      image: mongo-express
      container_name: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
        - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
        - ME_CONFIG_MONGODB_SERVER=mongodb

#   spring-postgres-blob
    postgresql-api:
      networks:
        - default
      container_name: postgres-api
      build:
        context: ./spring-postgres-blob
        dockerfile: Dockerfile
      environment:
        - PORT=8080
        - JWT_SECRET=ekfjnrsanfrfwamnkr
        - JWT_LIFETIME=60000

        - POSTGRES_USER=admin
        - POSTGRES_PASS=root
        - POSTGRES_DB=postgresdb
        - POSTGRES_URL=jdbc:postgresql://postgresql-db:5432/postgresdb

        - BLOB_URI="BlobEndpoint=https://dataincloudlab3.blob.core.windows.net/;QueueEndpoint=https://dataincloudlab3.queue.core.windows.net/;FileEndpoint=https://dataincloudlab3.file.core.windows.net/;TableEndpoint=https://dataincloudlab3.table.core.windows.net/;SharedAccessSignature=sv=2022-11-02&ss=bfqt&srt=o&sp=rwdlacupiytfx&se=2024-06-19T23:56:16Z&st=2024-06-16T15:56:16Z&spr=https&sig=N4yTkhAzNKNZGvZ3YekQDAk7EyqXOC7WZocKyobdTyk%3D"
        - BLOB_CONTAINER_NAME=blobcontainer

        - RABBITMQ_HOST=message_broker
        - RABBITMQ_PORT=5672
        - RABBITMQ_USER=guest
        - RABBITMQ_PASS=guest
      ports:
        - 8080:8080
    postgresql-db:
      image: postgres:16.1-alpine3.19
      container_name: postgresql-container
      networks:
        - default
      environment:
        POSTGRES_PASSWORD: root
        POSTGRES_USER: admin
        POSTGRES_DB: postgresdb
        POSTGRES_RABBITMQ_DB: rabbitmqdb
      ports:
        - 5432:5432

#   spring-rabbitmq
    rabbitmq-api:
      networks:
        - default
      container_name: rabbitmq-api
      build:
        context: ./spring-rabbitmq
        dockerfile: Dockerfile
      environment:
        - PORT=8080

        - POSTGRES_URL=jdbc:postgresql://postgresql-db:5432/rabbitmqdb
        - POSTGRES_DB=rabbitmqdb
        - POSTGRES_USER=admin
        - POSTGRES_PASS=root

        - RABBITMQ_HOST=message_broker
        - RABBITMQ_PORT=5672
        - RABBITMQ_USER=guest
        - RABBITMQ_PASS=guest
      ports:
        - 8080:8080
    message_broker:
      image: rabbitmq:3.13.3-management
      container_name: rabbitmq
      ports:
        - 5672:5672
        - 15672:15672
      networks:
        - rabbitmq

volumes:
  data: {}

networks:
  rabbitmq:
    driver: bridge
  default:
    name: mongodb_network